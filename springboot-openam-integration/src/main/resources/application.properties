# Spring Boot Server Configuration
server.port=8081
spring.application.name=springboot-openam-integration

# OpenAM URL for authentication (Replace with actual OpenAM URL)
openam.url=http://localhost:8080/openam/json/realms/root/authenticate

# OAuth 2.0 Client Configuration
spring.security.oauth2.client.registration.openam.client-id=testAdmin
spring.security.oauth2.client.registration.openam.client-secret=testAdmin+
spring.security.oauth2.client.registration.openam.scope=openid, profile
spring.security.oauth2.client.registration.openam.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.openam.redirect-uri=http://localhost:8081/login/oauth2/code/openam

# OAuth 2.0 Provider Configuration
spring.security.oauth2.client.provider.openam.token-uri=http://localhost:8080/openam/oauth2/access_token
spring.security.oauth2.client.provider.openam.authorization-uri=http://localhost:8080/openam/oauth2/authorize

# Optional: Enable OAuth2 login to handle the authorization code flow
spring.security.oauth2.client.login-uri=http://localhost:8080/openam/oauth2/authorize
spring.security.oauth2.client.logout-uri=http://localhost:8081/logout
